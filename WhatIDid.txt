Used youtube tutorial (seven parts):
https://www.youtube.com/watch?v=Fa4cRMaTDUI
https://www.youtube.com/watch?v=xZMwg5z5VGk&t=17s
https://www.youtube.com/watch?v=H6hM_5ilhqw
https://www.youtube.com/watch?v=1NSPAz1Qc-I
https://www.youtube.com/watch?v=3zw5LgKDMhg
https://www.youtube.com/watch?v=ipYlztBRpp0
https://www.youtube.com/watch?v=stx-tUS0vo4

Uninstalled homebrew, nvm, node, npm, nodemon, express
(to disassociate brew and npm--they don't like each other.
I'll reinstall brew for things like python and sql later).

Installed nvm:
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash

Installed node (which now includes npm):
nvm install node

Checked everything installed ok:
nvm --version && node -v && npm -v0

Made a git repo for the site and clone it 
    git clone <URL from github>
    cd (to the the new folder)

Created Client Side stuff:
    Got vue.js going (client server will run on localhost:8080):
    npm install -g vue-cli
    vue init webpack <name of new client side folder>
    cd <name of new client side folder>
    npm install
    git add --all
    git commit -m 'got Vue going'
    git push
    npm run dev
    (ctrl+c)
    npm install --save axios
    manually created <client folder>/src/services/api.js 

Created Server Side stuff:
    cd .. (if still in client side folder)
    mkdir <name of new server side folder>
    cd <name of new server side folder>
    npm init -f
    npm install --save nodemon eslint
    node ./node_modules/eslint/bin/eslint.js --init
    (add "no-console":0 to the rules in the new .eslintrc.json file)
    npm start
    (ctrl+c)
    npm install --save express body-parser cors morgan
    git add --all
    git commit -m 'got Express going'
    git push
    npm start

Made a registration endpoint
    manually created <client folder>/src/services/api.js:
        import axios from 'axios'
        export default () => {
            return axios.create({
                baseURL: 'http://localhost:8081/'
            })
        }
    manually created <client folder>/src/services/AuthenticationService.js:
        import Api from '@/services/Api'
        export default {
            register (credentials) {
                return Api().post('register', credentials)
            }
        }
    added this <server folder>/src/app.js:
        app.post('/register', (req, res) => {
            res.send({
                message: 'Hello ${req.body.email}! You\'re now registered!'
            })
        })
    Declared /register route in <client folder>/src/router/index.js:
        {
            path: '/register',
            name: 'register',
            component: Register
        }
    Declared Register Import in the same file:
        import Register from '@/components/Register'
    Created <client folder>/src/components/Register.vue:
        <template>
            <div>
                <h1>Register</h1>

                <input
                    type="email"
                    name="email"
                    v-model="email"
                    placeholder="email"/>
                <br>
                <input
                    type="password"
                    name="password"
                    v-model="password"
                    placeholder="password"/>
                <br>
                <button
                    @click="register">
                    Register
                </button>
            </div>
        </template>

        <script>
        import authenticationService from '@/services/authenticationService'
        export default {
            data () {
                return {
                    email: 'you@somewhere.something',
                    password: 'secret thing'
                }
            },
            watch: {
                email (value) {
                    console.log('email has changed', value)
                }
            },
            methods: {
                async register () {
                    const res = await authenticationService.register({
                        email: this.email,
                        password: this.password
                    })
                    console.log(res.data.message)
                }
            },
            mounted () {
                setTimeout(() => {
                    this.email = 'hey asshole'
                }, 2000)
            }
        }
        </script>

        <!-- Add "scoped" attribute to limit CSS to this component only -->
        <style scoped>

        </style>
    
    git add --all
    git commit -m 'superficial registration page'
    git push